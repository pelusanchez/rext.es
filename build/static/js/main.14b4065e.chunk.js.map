{"version":3,"sources":["Menu.tsx","defauls.ts","App.tsx","reportWebVitals.js","index.js"],"names":["Menu","props","React","useState","openedContainers","setOpenedContainers","MenuItems","map","container","className","title","onClick","e","updatedContainer","undefined","switchContainer","items","item","name","type","min","max","defaultValue","value","params","id","step","onChange","parseFloat","target","defaultParams","hdr","exposure","temperature","tint","brightness","saturation","contrast","sharpen","masking","sharpen_radius","radiance","highlights","shadows","whites","blacks","dehaze","bAndW","atmosferic_light","lightFill","lightColor","lightSat","darkFill","darkColor","darkSat","Rext","RextEditor","App","memo","document","isLoaded","setIsLoaded","setParams","canvasRef","createRef","inputRef","updateParams","nextParams","update","download","a","blob","url","URL","createObjectURL","dlLink","createElement","href","body","append","click","removeChild","revokeObjectURL","current","xmlns","width","height","viewBox","d","fill","data-action","key","style","ref","accept","file","files","setCanvas","load","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.14b4065e.chunk.js","sourcesContent":["import React from 'react'\nimport { Params } from 'rext-image-editor/dist/models/models'\nimport './style/slider.scss'\nimport MenuItems from './MenuItems.json'\nexport interface MenuProps {\n  params: Params;\n  onChange(key: string, value: number) : void;\n}\n\nexport const Menu = (props: MenuProps) => {\n  \n  const [ openedContainers, setOpenedContainers] = React.useState<{ [key: string]: boolean}> ({ \"Tones\": true });\n\n  const switchContainer = (container: any) => {\n    const updatedContainer = { ...openedContainers }\n    if (updatedContainer[container.title] === undefined) {\n      updatedContainer[container.title] = false\n    }\n    updatedContainer[container.title] = !updatedContainer[container.title]\n\n    setOpenedContainers(updatedContainer)\n  }\n\n  return (<>\n      {MenuItems.map(container => {\n        return (\n        <div className={\"menu-container \" + ((openedContainers[container.title]) ? 'open': '') }>\n          <div className=\"menu-container-title\" onClick={e => switchContainer(container)}>\n            <div className=\"text\">{container.title}</div>\n            <div className=\"expand-submenu-icon\">+</div>\n          </div>\n          {container.items.map(item => {\n            return (\n              <div className=\"menu_item\">\n                <div className=\"text left\">{item.name}</div>\n                <input \n                  type=\"range\" \n                  className=\"range\" \n                  min={item.min} \n                  max={item.max} \n                  defaultValue={item.value} \n                  value={props.params[item.id]} \n                  step={item.step} \n                  onChange={e => props.onChange(item.id, parseFloat(e.target.value)) }/>\n              </div>)\n          })}\n        </div>\n        )\n      })}\n</>)\n} \n\nexport default Menu\n","import { Params } from 'rext-image-editor/dist/models/models';\n\nexport const defaultParams : Params = {\n  hdr: 0,\n  exposure: 0,\n  temperature: 0,\n  tint: 0,\n  brightness: 0,\n  saturation: 0,\n  contrast: 0,\n  sharpen: 0,\n  masking: 0,\n  sharpen_radius: 0,\n  radiance: 0,\n  highlights: 0,\n  shadows: 0,\n  whites: 0,\n  blacks: 0,\n  dehaze: 0,\n  bAndW: 0,\n  atmosferic_light: 0,\n  lightFill: 0,\n  lightColor: 0,\n  lightSat: 1,\n  darkFill: 0,\n  darkColor: 0,\n  darkSat: 1\n};\n","import React from 'react'\nimport './desktop.scss';\nimport './style/normalize.css';\nimport './style/scrollbar.scss'\nimport Menu from './Menu'\nimport { RextEditor } from 'rext-image-editor/dist'\nimport { Params } from 'rext-image-editor/dist/models/models';\nimport { defaultParams } from './defauls'\n\nconst Rext : RextEditor = new RextEditor()\n\nconst App = React.memo(() => {\n\n  document.title = 'Rext Image Editor'\n  const [ isLoaded, setIsLoaded ] = React.useState<boolean>(false);\n  const [ params, setParams ] = React.useState<Params>(defaultParams);\n\n  const canvasRef = React.createRef<HTMLCanvasElement>();\n  const inputRef = React.createRef<HTMLInputElement>();\n\n  const loadImage = (e: any) => { \n    const files : FileList = e.target.files\n    const file = files[0]\n    if (!isLoaded) {\n      Rext.setCanvas(canvasRef.current!)\n      setIsLoaded(true)\n    }\n    Rext.load(URL.createObjectURL(file))\n  }\n\n  const onChange = (key: string, value: number) => { \n    const nextParams = { ...params, [key]: value }\n    updateParams(nextParams)\n  }\n\n  const updateParams = (nextParams: Params) => {\n    if (!isLoaded) {\n      return;\n    }\n    setParams(nextParams)\n    Rext.updateParams(nextParams)\n    Rext.update();\n  }\n\n  const download = async () => {\n    if (!isLoaded) {\n      return;\n    }\n    const blob = await Rext.blob()\n    const url = URL.createObjectURL(blob);\n    const dlLink = document.createElement(\"a\");\n    dlLink.href = url;\n    dlLink.download = \"image.jpg\";\n    document.body.append(dlLink);\n    dlLink.click();\n    document.body.removeChild(dlLink);\n    URL.revokeObjectURL(url);\n  }\n\n  const reset = () => {\n    updateParams(defaultParams)\n  }\n\n  return (\n    <div className=\"rext\">\n      <div className=\"rext-container\">\n        <div className=\"rext-toolbar\">\n          <div className=\"box-buttons\">\n            <div id=\"image-open\" className=\"box-button\" onClick={() => inputRef.current?.click()}>\n              <div className=\"box-button-image\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" fill=\"white\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n              </div>\n              <span>Abrir</span>\n            </div>\n            <div className=\"box-button data-action\" data-action=\"reset\" onClick={() => reset() }>\n              <div className=\"box-button-image\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path fill=\"white\" d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"/></svg>\n              </div>\n              <span>Reiniciar</span>\n            </div>\n            <div id=\"image-save\" className=\"box-button\" onClick={() => download()}>\n              <div className=\"box-button-image\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path fill=\"white\" d=\"M16 13h-3V3h-2v10H8l4 4 4-4zM4 19v2h16v-2H4z\"/></svg>\n              </div>\n              <span>Guardar</span>\n            </div>\n          </div>\n\n          <Menu onChange={onChange} params={params}></Menu>\n        </div>\n        <div className=\"rext-canvas\">\n          <div id=\"canvas_info\" style={{\"color\": \"#FFFFFF\" }} className={ (isLoaded) ? \"hidden\" : \"\" }>\n            Para comenzar, abra una imagen\n          </div>\n          <canvas id=\"image_main\" ref={canvasRef} className={ (!isLoaded) ? 'hidden' : \"\" } width=\"400\" height=\"400\"></canvas>\n        </div>\n        <input type=\"file\" id=\"image_data\" accept=\"image/*\" ref={inputRef} onChange={loadImage}></input>\n      </div>\n    </div>\n  );\n})\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}